@page "/" 
@using GreenDragonTranscoder.CoreLib.Services
@using GreenDragonTranscoder.CoreLib.Services.SlateService
@using GreenDragonTranscoder.Hybrid.Helpers
@using System.Diagnostics
@*
<MudToolBar>
    <MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="Color.Inherit" Class="mr-5" />

    <MudIconButton Icon="@Icons.Material.Outlined.Add" />

    <MudSpacer />

    <MudIconButton Icon="@Icons.Material.Outlined.MoreVert" Color="Color.Inherit" />
</MudToolBar>
*@
<MudStack Row="true" Class="pl-6 pr-6 pt-6" Style="width:100%;">

    <MudPaper Style="min-width: 300px; width: 300px;">

        <MudListSubheader Class="pb-4">
            <MudStack Row="true"
                      Justify="Justify.SpaceBetween"
                      AlignItems="AlignItems.Center">
                <MudText Typo="Typo.inherit">Projects</MudText>
                <MudIconButton Icon="@Icons.Material.Filled.Add"
                               Size="Size.Small"
                               Color="Color.Primary"
                               Title="Add Project">
                </MudIconButton>
            </MudStack>
        </MudListSubheader>
        <MudTextField Clearable="true"
                      @bind-Value="@searchProject"
                      Immediate="true"
                      T="string"
                      OnKeyDown="@((e)=> filteredProjects = projects.Where(x=>x.Name.Contains(searchProject?? string.Empty, StringComparison.InvariantCultureIgnoreCase)))"
                      Label="Search"
                      Variant="Variant.Outlined"
                      Adornment="Adornment.End"
                      AdornmentIcon="@Icons.Material.Filled.Search"
                      Margin="Margin.Dense"
                      FullWidth="false"
                      Class="mr-3 ml-3 mb-6" />

        <div class="d-flex flex-column overflow-x-auto " style="width:100%;height:calc(100vh - 190px);">
            <MudList Clickable="true"
                     Color="Color.Primary"
                     Dense="false"
                     DisableGutters="false" 
                     @bind-SelectedItem="selectedItem"
                     @bind-SelectedValue="selectedValue"
                     Class="ma-0 pa-0">
                @foreach (var item in filteredProjects)
                { 
                    <MudListItem Value="@item.Id" Text="@item.Name" Avatar="@Icons.Material.Filled.Movie" />
                }
            </MudList>
        </div>
    </MudPaper>

    <MudPaper Class="mud-width-full" Style="width:100%;min-width:680px;">
        @if (selectedValue == null || (int)selectedValue == 0)
        {
            <div class="d-flex flex-column overflow-x-auto align-center justify-center" style="width:100%;height: 100%;">
                <span>Choose a project from the list to begin.</span>
            </div>
        }
        else
        {
            <MudPaper>
                <MudToolBar>
                    <MudText Typo="Typo.h6" Color="Color.Default">Project Name:&nbsp;</MudText>
                    <MudText Typo="Typo.h6" Color="Color.Primary">@filteredProjects.FirstOrDefault(x => x.Id == (int)selectedValue)?.Name</MudText>

                        <MudSpacer />

                        <MudStack Row="true" Style="height: 30px;">
                            <MudButton Variant="Variant.Filled"
                                       Color="Color.Error"
                                       StartIcon="@Icons.Material.Filled.Stop"
                                       Size="Size.Small"
                                       Disabled="@(!running)"
                                       OnClick="(()=>running = false)"
                                       title="Cancel All Transcoding Tasks">
                                Cancel
                            </MudButton>
                            <MudButton Variant="Variant.Filled"
                                       Color="Color.Primary"
                                       StartIcon="@Icons.Material.Filled.PlayArrow"
                                       Size="Size.Small"
                                       Disabled="@(running)"
                                       OnClick="(()=>{running = true; SimulateProgress();})"
                                       title="Start All Transcoding Tasks">
                                Start
                            </MudButton>
                            <MudMenu Icon="@Icons.Material.Filled.MoreVert">
                                <MudMenuItem Icon="@Icons.Material.Filled.Edit"
                                             IconColor="Color.Warning"
                                             title="Edit Project">
                                    Edit
                                </MudMenuItem>
                                <MudMenuItem Icon="@Icons.Material.Filled.Delete"
                                             IconColor="Color.Error"
                                             title="Delete Project">
                                    Delete
                                </MudMenuItem>
                            </MudMenu>
                        </MudStack>
                    </MudToolBar>
                </MudPaper>
            <div class="mt-4">
                <MudStack Row="true"
                          Justify="Justify.SpaceBetween"
                          AlignItems="AlignItems.Center"
                          Class="pl-4 pr-4 pt-2 pb-2">
                    <MudText Typo="Typo.subtitle2">Transcode Folder:&nbsp;</MudText>
                    <MudText Typo="Typo.inherit">Folder Not Selected</MudText>
                    <MudButton StartIcon="@Icons.Material.Filled.Folder"
                               Disabled="@running"
                               Variant="Variant.Outlined"
                               Size="Size.Small"
                               Color="Color.Default"
                               Style="width: 100px;"
                               title="Select Transcode Folder">
                        Output
                    </MudButton>
                </MudStack>
                <MudStack Row="true"
                          Justify="Justify.SpaceBetween"
                          AlignItems="AlignItems.Center"
                          Class="pl-4 pr-4 pt-2 pb-2">
                    <MudText Typo="Typo.subtitle2">LUT:&nbsp;</MudText>
                    <MudText Typo="Typo.inherit">File Not Selected</MudText>
                    <MudButton StartIcon="@Icons.Material.Filled.Gradient"
                               Disabled="@running"
                               Size="Size.Small"
                               Color="Color.Default"
                               Variant="Variant.Outlined"
                               Style="width: 100px;"
                               title="Select LUT">
                        LUT
                    </MudButton>
                </MudStack>
            </div>
            <div class="mt-6">
                <MudDivider />
                <MudStack Row="true"
                          Justify="Justify.SpaceBetween"
                          AlignItems="AlignItems.Center"
                          Class="pa-4">
                    <MudText Typo="Typo.subtitle1" Color="Color.Secondary">Output Formats</MudText>
                    <MudButton StartIcon="@Icons.Material.Filled.Add"
                               Disabled="@running"
                               Size="Size.Small"
                               Variant="Variant.Outlined"
                               Color="Color.Secondary"
                               title="Add Output">
                        Add Output
                    </MudButton>
                </MudStack>
                <MudDivider />
                <MudDataGrid Items="@projectOutputs"
                             Height="calc(100vh - 400px)"
                             FixedHeader="true"
                             Filterable="false"
                             Elevation="0"
                             T="ProjectOutput"
                             ReadOnly="@(running)"
                             EditMode="DataGridEditMode.Cell"
                             SortMode="@SortMode.None"
                             Groupable="false">
                    <Columns>
                        <PropertyColumn Property="x => x.Codec" Title="Codec" HeaderStyle="width: 200px; max-width: 200px;">
                            <EditTemplate>
                                <MudSelect @bind-Value="context.Item.Codec" Required RequiredError="You must select a Codec!" Margin="@Margin.Dense">
                                     <MudSelectItem Value="@("mp4")">H.264 Medium</MudSelectItem>
                                     <MudSelectItem Value="@("avi")">avi</MudSelectItem>
                                     <MudSelectItem Value="@("mov")">mov</MudSelectItem>
                                 </MudSelect>
                             </EditTemplate>
                         </PropertyColumn>
                         <PropertyColumn Property="x => x.FPS" Title="FPS" HeaderStyle="width: 180px; max-width: 180px;">
                             <EditTemplate>
                                 <MudSelect @bind-Value="context.Item.FPS" Required RequiredError="You must select a FPS!" Margin="@Margin.Dense" Style="width: 50px;">
                                     <MudSelectItem Value="@("23")">23</MudSelectItem>
                                     <MudSelectItem Value="@("25")">25</MudSelectItem>
                                     <MudSelectItem Value="@("60")">60</MudSelectItem>
                                 </MudSelect>
                             </EditTemplate>
                         </PropertyColumn>
                         <PropertyColumn Property="x => x.Progress" Title="Progress" Format="0%" IsEditable="false" />
                         <TemplateColumn IsEditable="false" Title="Actions" HeaderStyle="width: 100px; max-width: 100px;">
                             <CellTemplate>
                                 <MudStack Row="true">
                                  @*    <MudIconButton Icon="@Icons.Material.Filled.PlayArrow"
                                                    Color="@Color.Primary"
                                                    Size="Size.Small"
                                                    Title="Start Transcoding">
                                     </MudIconButton>

                                     <MudIconButton Icon="@Icons.Material.Filled.Stop"
                                                    Color="@Color.Error"
                                Size="Size.Small"
                                Title="Cancel Transcoding">
                                </MudIconButton> *@

                                     <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                                    Disabled="@running"
                                                    Color="@Color.Error"
                                                    Size="Size.Small"
                                                    Title="Delete Output">
                                     </MudIconButton>
                                 </MudStack>
                             </CellTemplate>
                         </TemplateColumn>
                     </Columns>
                 </MudDataGrid> 
                 <MudDivider />
             </div>
             <div class="mt-2 pa-4">
                <MudProgressLinear Color="Color.Primary"
                Rounded="true" Size="Size.Large" Value="@Value"  
                                   Style=" height: 24px;">
                    @Value%
                </MudProgressLinear>
            </div>

        }
    </MudPaper>

</MudStack>

<MudPaper Style="position:fixed; bottom:0; left:0; width:100%;"
          Class="pa-2 pl-6"
          Elevation="2">
    This is footer. @(t.Elapsed)
</MudPaper>


@code {
    MudListItem selectedItem;
    object selectedValue;
    Color _color = Color.Primary;
     
    string searchProject;
    bool running = false;
    public record Employee(string Name, string Position, int YearsEmployed, int Salary, int Rating);
    public IEnumerable<Project> projects;
    public IEnumerable<Project> filteredProjects;
    public IEnumerable<ProjectOutput> projectOutputs;

    Stopwatch t = new Stopwatch();


    protected override void OnInitialized()
    {
        var projectsList = new List<Project>()
        {            
            new Project(1, "Vanilla Sky"),
            new Project(2, "Murder Mystery 2"), 

        };
        for (int i = 1; i < 15; i++)
        {
            projectsList.Add(new Project(i + projectsList.Count, $"The Out-Laws {i}"));
        }
        projects = projectsList;
        filteredProjects  = projects;
        projectOutputs = new List<ProjectOutput>()
        {
            new ProjectOutput("h265", "25 fps", 0.23, true),
            new ProjectOutput("h265", "25 fps", 0, false),
            new ProjectOutput("h265", "25 fps", 0, false),
            new ProjectOutput("h265", "25 fps", 0, false),
            new ProjectOutput("h265", "25 fps", 0, false),
            new ProjectOutput("h265", "25 fps", 0, false),
            new ProjectOutput("h265", "25 fps", 0, false),
            new ProjectOutput("h265", "25 fps", 0, false),
            new ProjectOutput("h265", "25 fps", 0, false),
            new ProjectOutput("h265", "25 fps", 0, false),
            new ProjectOutput("h265", "25 fps", 0, false),
            new ProjectOutput("h265", "25 fps", 0, false),
            new ProjectOutput("h265", "25 fps", 0, false),
        };

        var slateOptions = new SlateOptions()
            {
                SlateInfo = new SlateInfo()
                {
                    Title = "Vanilla Sky",
                    Slate = "VSK_103_101_123",
                    Date ="19/01/2024",
                    Shot = "VSK_103_101_123_v001",
                    Frames = "1023374-101323",
                    Artist = "Abba",
                    FPS = "23.976",
                    FileType = "EXR/H264",
                    FrameSize = "1920x1080",
                    Description = "Some description"
                }
            };

        t.Start();

       
        slateOptions.SlateBackgroundPath = Path.Combine(FileService.AppDataPath, "4k_slate_background.tif");
        slateOptions.SlateDrawingConfigPath = Path.Combine(FileService.AppDataPath, "slateDrawingConfig.json");
        slateOptions.FontFile = Path.Combine(FileService.AppDataPath, "Castoro-Regular.ttf");

        var tmpDirectory = Path.Combine(FileService.AppPath, "data");
        Directory.CreateDirectory(tmpDirectory);
        var slateSavePath = Path.Combine(tmpDirectory, $"slate.png");

        SlateService.CreateSlate(slateOptions, slateSavePath);

        t.Stop();
    }

    public int Value { get; set; }

    public async void SimulateProgress()
    {
        Value = 0;
        do
        {
            Value += 4;
            StateHasChanged();
            await Task.Delay(500);

        } while (Value < 100); 
    }
}
