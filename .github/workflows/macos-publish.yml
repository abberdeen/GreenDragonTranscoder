name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      id: release_output 
      upload_url: ${{ steps.create_release.outputs.upload_url  }}
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Print Upload Url
        run: | 
          echo "Upload Url: $upload_url" 

  macos_job:
    needs: release
    runs-on: macos-latest
    
    strategy:
      matrix:
        arch: [x64, arm64]

    steps:
      - name: Upload Url
        run: echo "upload_url=${{ needs.release.outputs.upload_url }}" 
        
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.101

      - name: Restore .NET MAUI Workload
        run: dotnet workload restore

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build .NET MAUI App for macOS (maccatalyst-${{ matrix.arch }})
        run: dotnet build -c Release -t:Build -o $GITHUB_WORKSPACE/build/${{ matrix.arch }} -p:TargetFramework=net8.0-maccatalyst -p:Arch=${{ matrix.arch }}

      - name: Create DMG Package (maccatalyst-${{ matrix.arch }})
        run: |
          ls -l $GITHUB_WORKSPACE/build/${{ matrix.arch }}
          hdiutil create -format UDZO -srcfolder $GITHUB_WORKSPACE/build/${{ matrix.arch }} -ov -o $GITHUB_WORKSPACE/GreenDragonTranscoder-${{ matrix.arch }}.dmg

      - name: Set DMG Path and Asset Name
        id: set_dmg
        run: |
          dmg_path="${GITHUB_WORKSPACE}/GreenDragonTranscoder-${{ matrix.arch }}.dmg"
          asset_name="GreenDragonTranscoder-${{ matrix.arch }}.dmg"
          echo "Absolute Path for ${{ matrix.arch }} DMG: $dmg_path"
          echo "Asset Name: $asset_name"
          echo "::set-output name=absolute_path::$dmg_path"
          echo "::set-output name=asset_name::$asset_name" 
          
      - name: Upload DMG
        id: upload_dmg
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ steps.set_dmg.outputs.absolute_path }}
          asset_name: ${{ steps.set_dmg.outputs.asset_name }}
          asset_content_type: application/x-diskcopy
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  windows_job:
    needs: release
    runs-on: windows-latest

    steps:    
      - name: Upload Url
        run: echo "upload_url=${{ needs.release.outputs.upload_url }}" 
 
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.101

      - name: Restore .NET MAUI Workload
        run: dotnet workload restore

      - name: Restore Dependencies
        run: dotnet restore
          
      - name: Build .NET MAUI App for Windows (x64)
        run: dotnet build -c Release -t:Build -o /app/build/x64 -p:TargetFramework=net8.0-windows10.0.19041.0 -p:Arch=x64

      - name: List Files in Directory
        run: |
          $directoryPath ="/app/build/x64"
          
          Write-Host "Files in directory: $directoryPath"
          Get-ChildItem -Path $directoryPath
          
      - name: Make MSIX Bundle
        id: bundler
        uses: LanceMcCarthy/Action-MsixBundler@v1.0.0
        with:
          msix-folder: "/app/build/x64"
          msixbundle-filepath: "/app/GreenDragonTranscoder_x64.msixbundle" 
          
      - name: Verify MSIX Bundle File Path
        shell: pwsh
        run: |
          $path_to_my_msix_bundle = ${{ steps.bundler.outputs.msixbundle_path }}
          Write-Output "MSIX Bundle Path: $path_to_my_msix_bundle"
          
      - name: Upload MSIX Bundle
        id: upload_msix
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: "/app/GreenDragonTranscoder_x64.msixbundle" 
          asset_name: GreenDragonTranscoder_x64.msixbundle
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
