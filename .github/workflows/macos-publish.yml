name: MacOS - Build and Release
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: macos-latest
    steps:
    
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.0.101
        
    - name: Setup xCode latest
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest

    - name: Install .NET MAUI workload for macOS
      run: dotnet workload install maui-maccatalyst  
  
    - name: Restore Dependencies
      run: dotnet restore

    - name: Create Artifacts Folder
      run: |
        mkdir -p $GITHUB_WORKSPACE/build/x64
        mkdir -p $GITHUB_WORKSPACE/build/arm64
        mkdir -p $GITHUB_WORKSPACE/artifacts
        ls -l $GITHUB_WORKSPACE
        
    # Build .NET MAUI App for macOS (maccatalyst-x64)
    - name: Build .NET MAUI App for macOS (maccatalyst-x64)
      run: dotnet build -c Release -t:Build -o $GITHUB_WORKSPACE/build/x64 -p:TargetFramework=net8.0-maccatalyst -p:Arch=x64

    - name: Create DMG Package (maccatalyst-x64)
      run: |
        ls -l $GITHUB_WORKSPACE/build/x64
        hdiutil create -verbose -format UDZO -srcfolder $GITHUB_WORKSPACE/build/x64 -ov $GITHUB_WORKSPACE/GreenDragonTranscoder-x64.dmg

    # Build .NET MAUI App for macOS (maccatalyst-arm64)
    - name: Build .NET MAUI App for macOS (maccatalyst-arm64)
      run: dotnet build -c Release -t:Build -o $GITHUB_WORKSPACE/build/arm64 -p:TargetFramework=net8.0-maccatalyst -p:Arch=arm64

    - name: Create DMG Package (maccatalyst-arm64)
      run: |
        ls -l $GITHUB_WORKSPACE/build/arm64
        hdiutil create -verbose -format UDZO -srcfolder $GITHUB_WORKSPACE/build/arm64 -ov $GITHUB_WORKSPACE/GreenDragonTranscoder-arm64.dmg
        
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Debug - List Artifacts Directory
      run: |
        ls -l $GITHUB_WORKSPACE
        - name: Set x64 DMG Path
        
    - name: Set x64 DMG Path
      run: |
        ABSOLUTE_PATH_X64=$(realpath "$GITHUB_WORKSPACE/GreenDragonTranscoder-x64.dmg")
        echo "Absolute Path for x64 DMG: $ABSOLUTE_PATH_X64"
      id: set_x64
    
    - name: Upload x64 DMG
      id: upload_x64
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.set_x64.outputs.ABSOLUTE_PATH_X64 }}
        asset_name: GreenDragonTranscoder-x64.dmg
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    
    - name: Set arm64 DMG Path
      run: |
        ABSOLUTE_PATH_ARM64=$(realpath "$GITHUB_WORKSPACE/GreenDragonTranscoder-arm64.dmg")
        echo "Absolute Path for arm64 DMG: $ABSOLUTE_PATH_ARM64"
      id: set_arm64
    
    - name: Upload arm64 DMG
      id: upload_arm64
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.set_arm64.outputs.ABSOLUTE_PATH_ARM64 }}
        asset_name: GreenDragonTranscoder-arm64.dmg
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
