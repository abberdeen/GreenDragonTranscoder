name: MacOS - Build and Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

  build:
    needs: release
    runs-on: macos-latest
    
    strategy:
      matrix:
        arch: [x64, arm64]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.101

      - name: Setup xCode latest
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest

      - name: Install .NET MAUI workload for macOS
        run: dotnet workload install maui-maccatalyst

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build .NET MAUI App for macOS (maccatalyst-${{ matrix.arch }})
        run: dotnet build -c Release -t:Build -o $GITHUB_WORKSPACE/build/${{ matrix.arch }} -p:TargetFramework=net8.0-maccatalyst -p:Arch=${{ matrix.arch }}

      - name: Create DMG Package (maccatalyst-${{ matrix.arch }})
        run: |
          ls -l $GITHUB_WORKSPACE/build/${{ matrix.arch }}
          hdiutil create -format UDZO -srcfolder $GITHUB_WORKSPACE/build/${{ matrix.arch }} -ov -o $GITHUB_WORKSPACE/GreenDragonTranscoder-${{ matrix.arch }}.dmg

      - name: Debug - List Artifacts Directory
        run: |
          ls -l $GITHUB_WORKSPACE

      - name: Set DMG Path
        id: set_dmg
        run: |
          absolute_path="${GITHUB_WORKSPACE}/GreenDragonTranscoder-${{ matrix.arch }}.dmg"
          echo "Absolute Path for ${{ matrix.arch }} DMG: $absolute_path"
          echo "::set-output name=absolute_path_${{ matrix.arch }}::$absolute_path"

      - name: Upload DMG
        id: upload_dmg
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.set_dmg.outputs.absolute_path_${{ matrix.arch }} }}
          asset_name: GreenDragonTranscoder-${{ matrix.arch }}.dmg
          asset_content_type: application/x-diskcopy
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
