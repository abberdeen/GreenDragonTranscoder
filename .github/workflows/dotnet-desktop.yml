name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.0.101

    - name: Setup xCode latest
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest

    - name: Install .NET MAUI workload for macOS
      run: dotnet workload install maui-maccatalyst  
  
    - name: Restore Dependencies
      run: dotnet restore

    - name: Build .NET MAUI App for macOS (DMG)
      run: dotnet build -c Release -t:Build -p:TargetFramework=net8.0-maccatalyst

    - name: Create Temporary Folder for DMG
      run: mkdir -p $GITHUB_WORKSPACE/temp/dmg

    - name: Create DMG Package
      run: |
        ls -l /Users/runner/work/GreenDragonTranscoder/GreenDragonTranscoder/GreenDragonTranscoder.MauiCore/bin/Release/net8.0-maccatalyst/
        hdiutil create -format UDRW -srcfolder /Users/runner/work/GreenDragonTranscoder/GreenDragonTranscoder/GreenDragonTranscoder.MauiCore/bin/Release/net8.0-maccatalyst/ -ov $GITHUB_WORKSPACE/temp/dmg/output.dmg

    - name: Detach DMG
      run: hdiutil detach "/Volumes/GreenDragonTranscoder" || true

    - name: Convert DMG to Read-only
      run: hdiutil convert $GITHUB_WORKSPACE/temp/dmg/output.dmg -format UDZO -o $GITHUB_WORKSPACE/temp/dmg/output-read-only.dmg

    - name: Archive DMG Package
      run: |
        mkdir -p $GITHUB_WORKSPACE/artifacts
        mv $GITHUB_WORKSPACE/temp/dmg/output-read-only.dmg $GITHUB_WORKSPACE/artifacts/GreenDragonTranscoder.dmg

    - name: Build .NET MAUI App for Windows (MSIX)
      run: dotnet build -c Release -t:Build -p:TargetFramework=net8.0-windows10.0.19041.0

    - name: Create Temporary Folder for MSIX
      run: mkdir -p $GITHUB_WORKSPACE/temp/msix

    - name: Create MSIX Package
      run: dotnet msbuild -t:Publish -p:Configuration=Release -p:TargetFramework=net8.0-windows10.0.19041.0 /p:OutputPath=$GITHUB_WORKSPACE/temp/msix

    - name: Archive MSIX Package
      run: |
        mkdir -p $GITHUB_WORKSPACE/artifacts
        mv $GITHUB_WORKSPACE/temp/msix/*.msix $GITHUB_WORKSPACE/artifacts/GreenDragonTranscoder.msix

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload DMG Package
      id: upload-dmg
      uses: actions/upload-artifact@v2
      with:
        name: dmg-package
        path: $GITHUB_WORKSPACE/artifacts/*.dmg

    - name: Upload MSIX Package
      id: upload-msix
      uses: actions/upload-artifact@v2
      with:
        name: msix-package
        path: $GITHUB_WORKSPACE/artifacts/*.msix

    - name: Add DMG Package to Release
      uses: actions/upload-release-asset@v1
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: $GITHUB_WORKSPACE/artifacts/GreenDragonTranscoder.dmg
        asset_name: GreenDragonTranscoder.dmg
        asset_content_type: application/octet-stream

    - name: Add MSIX Package to Release
      uses: actions/upload-release-asset@v1
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: $GITHUB_WORKSPACE/artifacts/GreenDragonTranscoder.msix
        asset_name: GreenDragonTranscoder.msix
        asset_content_type: application/octet-stream
